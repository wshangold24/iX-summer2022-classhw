{"ast":null,"code":"var _jsxFileName = \"/Users/willshangold/Documents/Summer 2022- Work/iXperience/Week 2/Day 10/task-list-routing/src/components/tasks/TasksPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; //import components from components folder\n\nimport TaskTable from \"./TaskTable\";\nimport TaskInput from \"./TaskInput\"; //import the Task class from the models folder\n\nimport { Task } from \"../../models/task\"; //import firebase\n// import { db } from './firebase/firebase';\n\nimport TaskService from \"../../services/task.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TasksPage() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  async function fetchTasks() {\n    const existingTasks = await TaskService.fetchTasks();\n    setTasks(existingTasks);\n  }\n\n  async function onTaskCreate(name) {\n    // console.log(\"App.js\", name);\n    //create the task\n    // const task = new Task(new Date().getTime(), name, false);\n    const task = await TaskService.createTask(new Task(null, name, false)); //add the task to the tasks state\n\n    setTasks([...tasks, task]);\n  }\n\n  async function onTaskCompleteToggle(taskId) {\n    //toggle the task completed state\n    const taskToToggle = tasks.find(task => task.id === taskId); //update the tasks state\n\n    taskToToggle.complete = !taskToToggle.complete; //update the task in the firebase collection\n\n    await TaskService.updateTask(taskToToggle);\n    setTasks(tasks.map(task => {\n      return task.id === taskId ? taskToToggle : task;\n    }));\n  }\n\n  async function onTaskRemove(taskId) {\n    //delete the task from the firebase collection\n    await TaskService.deleteTask(taskId); //filter the tasks to keep tasks which don't have the id passed in\n    //update the tasks state with the filtered list\n\n    setTasks(tasks.filter(task => {\n      return task.id !== taskId;\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-body text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Our simple task list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n        onTaskCreate: onTaskCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskTable, {\n        tasks: tasks,\n        onTaskCompleteToggle: onTaskCompleteToggle,\n        onTaskRemove: onTaskRemove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TasksPage, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n\n_c = TasksPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"names":["React","useEffect","useState","TaskTable","TaskInput","Task","TaskService","TasksPage","tasks","setTasks","fetchTasks","existingTasks","onTaskCreate","name","task","createTask","onTaskCompleteToggle","taskId","taskToToggle","find","id","complete","updateTask","map","onTaskRemove","deleteTask","filter"],"sources":["/Users/willshangold/Documents/Summer 2022- Work/iXperience/Week 2/Day 10/task-list-routing/src/components/tasks/TasksPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n//import components from components folder\nimport TaskTable from \"./TaskTable\";\nimport TaskInput from \"./TaskInput\";\n\n//import the Task class from the models folder\nimport { Task } from \"../../models/task\";\n\n//import firebase\n// import { db } from './firebase/firebase';\nimport TaskService from \"../../services/task.service\";\n\nexport default function TasksPage() {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  async function fetchTasks() {\n    const existingTasks = await TaskService.fetchTasks();\n    setTasks(existingTasks);\n  }\n\n  async function onTaskCreate(name) {\n    // console.log(\"App.js\", name);\n    //create the task\n    // const task = new Task(new Date().getTime(), name, false);\n\n    const task = await TaskService.createTask(new Task(null, name, false));\n\n    //add the task to the tasks state\n    setTasks([...tasks, task]);\n  }\n\n  async function onTaskCompleteToggle(taskId) {\n    //toggle the task completed state\n    const taskToToggle = tasks.find((task) => task.id === taskId);\n\n    //update the tasks state\n    taskToToggle.complete = !taskToToggle.complete;\n\n    //update the task in the firebase collection\n    await TaskService.updateTask(taskToToggle);\n\n    setTasks(\n      tasks.map((task) => {\n        return task.id === taskId ? taskToToggle : task;\n      })\n    );\n  }\n\n  async function onTaskRemove(taskId) {\n    //delete the task from the firebase collection\n    await TaskService.deleteTask(taskId);\n\n    //filter the tasks to keep tasks which don't have the id passed in\n    //update the tasks state with the filtered list\n    setTasks(\n      tasks.filter((task) => {\n        return task.id !== taskId;\n      })\n    );\n  }\n\n  return (\n    <div className=\"container my-5\">\n      <div className=\"card card-body text-center\">\n        <h1>Task List</h1>\n        <hr></hr>\n        <p>Our simple task list</p>\n\n        <TaskInput onTaskCreate={onTaskCreate} />\n        <TaskTable\n          tasks={tasks}\n          onTaskCompleteToggle={onTaskCompleteToggle}\n          onTaskRemove={onTaskRemove}\n        />\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,mBAArB,C,CAEA;AACA;;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAClC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EAEAD,SAAS,CAAC,MAAM;IACdS,UAAU;EACX,CAFQ,EAEN,EAFM,CAAT;;EAIA,eAAeA,UAAf,GAA4B;IAC1B,MAAMC,aAAa,GAAG,MAAML,WAAW,CAACI,UAAZ,EAA5B;IACAD,QAAQ,CAACE,aAAD,CAAR;EACD;;EAED,eAAeC,YAAf,CAA4BC,IAA5B,EAAkC;IAChC;IACA;IACA;IAEA,MAAMC,IAAI,GAAG,MAAMR,WAAW,CAACS,UAAZ,CAAuB,IAAIV,IAAJ,CAAS,IAAT,EAAeQ,IAAf,EAAqB,KAArB,CAAvB,CAAnB,CALgC,CAOhC;;IACAJ,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWM,IAAX,CAAD,CAAR;EACD;;EAED,eAAeE,oBAAf,CAAoCC,MAApC,EAA4C;IAC1C;IACA,MAAMC,YAAY,GAAGV,KAAK,CAACW,IAAN,CAAYL,IAAD,IAAUA,IAAI,CAACM,EAAL,KAAYH,MAAjC,CAArB,CAF0C,CAI1C;;IACAC,YAAY,CAACG,QAAb,GAAwB,CAACH,YAAY,CAACG,QAAtC,CAL0C,CAO1C;;IACA,MAAMf,WAAW,CAACgB,UAAZ,CAAuBJ,YAAvB,CAAN;IAEAT,QAAQ,CACND,KAAK,CAACe,GAAN,CAAWT,IAAD,IAAU;MAClB,OAAOA,IAAI,CAACM,EAAL,KAAYH,MAAZ,GAAqBC,YAArB,GAAoCJ,IAA3C;IACD,CAFD,CADM,CAAR;EAKD;;EAED,eAAeU,YAAf,CAA4BP,MAA5B,EAAoC;IAClC;IACA,MAAMX,WAAW,CAACmB,UAAZ,CAAuBR,MAAvB,CAAN,CAFkC,CAIlC;IACA;;IACAR,QAAQ,CACND,KAAK,CAACkB,MAAN,CAAcZ,IAAD,IAAU;MACrB,OAAOA,IAAI,CAACM,EAAL,KAAYH,MAAnB;IACD,CAFD,CADM,CAAR;EAKD;;EAED,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,uBACE;MAAK,SAAS,EAAC,4BAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAKE,QAAC,SAAD;QAAW,YAAY,EAAEL;MAAzB;QAAA;QAAA;QAAA;MAAA,QALF,eAME,QAAC,SAAD;QACE,KAAK,EAAEJ,KADT;QAEE,oBAAoB,EAAEQ,oBAFxB;QAGE,YAAY,EAAEQ;MAHhB;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;;GArEuBjB,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}